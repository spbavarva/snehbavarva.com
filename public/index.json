[{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main sdf\nskdf jwefwejifbwejifbwefiwebfwijfwebfkwjhfbwekhbfwekhfb wekjrfhnwekjrfbnwekjfbnw wekjfbnwkjfbnwkjfwfkbn wkejrfbnwkjfbwknfbwkwbf \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main sdf\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main sd\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main s\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git {{}}\nSet-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"},{"content":"Overview This PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\nAutomatic commit + push of your notes SSH key generation and registration Runs entirely on Windows Task Scheduler Getting Started Prerequisites Git for Windows Obsidian vault (already created or new) A GitHub account Vault + GitHub Setup Open PowerShell as an administrator in your Obsidian vault folder.\nGenerate SSH key ssh-keygen -t ed25519 -C \u0026#34;YOUR_EMAIL@gmail.com\u0026#34; When prompted: (I recommend using Vault path for smooth flow and not default key path)\nEnter file in which to save the key: ‚ûú Type: D:\\your_obsidian_vault\\id_ed25519\nEnable and start SSH agent Set-Service -Name ssh-agent -StartupType Automatic Start-Service ssh-agent ssh-add D:\\your_obsidian_vault\\id_ed25519 you should see output like: \u0026ldquo;Identity added: path\u0026rdquo;\nAdd key to GitHub Get-Content D:\\your_obsidian_vault\\id_ed25519.pub Copy the full key (output start from ssh-ed \u0026lt;SNIP\u0026gt; YOUR_EMAIL@gmail.com) ‚Üí Go to GitHub ‚Üí Settings ‚Üí SSH and GPG Keys ‚Üí New SSH Key ‚Üí Paste and save.\nTest the connection:\nssh -T git@github.com prompt yes and you should see Hi @your_username! blah blah\nCreate private GitHub repo Name it: obsidian-sync ‚úÖ Mark it private ‚ùå Do not initialize with README or .gitignore Initialize Git in your vault git init git remote add origin git@github.com:yourusername/obsidian-sync.git Set-Content .gitignore \u0026#34;.obsidian/cache/`n.obsidian/workspace`n.obsidian/plugins`nid_ed25519`nid_ed25519.pub`nscripts/\u0026#34; git add . git commit -m \u0026#34;Clean initial commit: safe sync setup\u0026#34; git branch -M main git push -f origin main \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rAutomation Script Make new .ps1 file in the same directory and copy content from this one-time PowerShell script setup_obsidian_sync.ps1 and in same administartor pwershell.exe to automate syncing:\nSet-ExecutionPolicy Bypass -Scope Process -Force .\\setup_obsidian_sync.ps1 -VaultPath \u0026#34;D:\\your_obsidian_vault\u0026#34; -PrivateKeyPath \u0026#34;D:\\your_obsidian_vault\\id_ed25519\u0026#34; This will:\nGenerate sync_obsidian.ps1 and load_ssh_key.ps1 Create two scheduled tasks: SSH key loader at login Auto-sync every 15 minutes (runs silently in the background) \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rUsage Just update your notes in Obsidian - every 15 minutes the changes will be committed and pushed.\nTo test immediately:\nStart-ScheduledTask -TaskName \u0026#34;Obsidian_Auto_Sync\u0026#34; You can verify pushes by checking your GitHub repository.\n","permalink":"http://localhost:1313/projects/obsidian-sync-from-windows-free/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis PowerShell-based automation sets up your Obsidian vault to sync with a private GitHub repo every 15 minutes.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAutomatic commit + push of your notes\u003c/li\u003e\n\u003cli\u003eSSH key generation and registration\u003c/li\u003e\n\u003cli\u003eRuns entirely on Windows Task Scheduler\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\n\u003chr\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003ch3 id=\"prerequisites\"\u003ePrerequisites\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/download/win\"\u003eGit for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eObsidian vault (already created or new)\u003c/li\u003e\n\u003cli\u003eA GitHub account\n\u003cbr\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"vault--github-setup\"\u003eVault + GitHub Setup\u003c/h3\u003e\n\u003cp\u003eOpen PowerShell as \u003cstrong\u003ean administrator\u003c/strong\u003e in your Obsidian vault folder.\u003c/p\u003e\n\u003ch4 id=\"generate-ssh-key\"\u003eGenerate SSH key\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;YOUR_EMAIL@gmail.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eWhen prompted:  (I recommend using Vault path for smooth flow and not default key path)\u003c/p\u003e","title":"Obsidian sync from windows"},{"content":"As we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\nIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\nBut before that,\nWhat is YARA? YARA (\u0026quot;Yet Another Ridiculous Acronym\u0026quot;) is a pattern-matching tool for identifying malware families based on string signatures, binary patterns, metadata.\nToo much? it\u0026rsquo;s just rules that helps to detect patterns. Okay let\u0026rsquo;s see where it\u0026rsquo;s useful:\nMalware detection and classification File analysis and classification IOC detection Community-driven rule sharing Custom security solution Custom YARA rules Incident Response Proactive Threat Hunting How actually it works The image below illustrates the basic workflow of YARA detection.\nAnalysts observe suspicious strings, binary patterns, or structural behaviors in known malware samples. These are then translated into YARA rules. The YARA scan engine uses these rules‚Äîalong with optional modules‚Äîto evaluate files, memory, or network traffic for matches. If a file contains characteristics that satisfy the conditions in a rule, it\u0026rsquo;s flagged as potentially malicious.\nBelow is simple YARA rule:\nrule my_rule { meta: author = \u0026#34;Sneh\u0026#34; description = \u0026#34;Detects test strings\u0026#34; strings: $a = \u0026#34;test\u0026#34; $b = \u0026#34;string\u0026#34; $c = \u0026#34;rule\u0026#34; condition: all of them } A rule contains:\nMetadata: for attribution/documentation\nStrings: literal strings, hex patterns, or regex\nCondition: logic to match the strings\nReal World Example of Detecting WannaCry rule Ransomware_WannaCry { meta: author = \u0026#34;Madhukar Raina\u0026#34; description = \u0026#34;Detects WannaCry ransomware\u0026#34; strings: $s1 = \u0026#34;tasksche.exe\u0026#34; $s2 = \u0026#34;www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\u0026#34; $s3 = \u0026#34;mssecsvc.exe\u0026#34; condition: all of them } This rule detects the presence of WannaCry ransomware by matching three key indicators observed in the malware: its dropped executable (tasksche.exe), the kill-switch domain used for sandbox evasion, and the service binary (mssecsvc.exe) it installs. Requiring all three strings ensures high confidence in detection while minimizing false positives.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rDeveloping YARA rules we can do this manually and automatically. so let\u0026rsquo;s look into both ways:\nManually writing YARA rules As we know that YARA rule is made up of three main blocks: meta, strings, and condition.\nSo, we just have to write what we want to detect but this is the pain in the butt as it takes a lot of research. Here‚Äôs an example rule to detect UPX-packed binaries, commonly used to compress or obfuscate malware:\nrule UPX_packed_executable { meta: description = \u0026#34;Detects UPX-packed executables\u0026#34; strings: $string_1 = \u0026#34;UPX0\u0026#34; $string_2 = \u0026#34;UPX1\u0026#34; $string_3 = \u0026#34;UPX2\u0026#34; condition: all of them } This rule checks for classic UPX section names in binaries (UPX0, UPX1, UPX2) which are indicators that the file has been packed using the UPX packer‚Äîoften a red flag during malware triage.\nUsing yarGen for Rule Generation yarGen is an automated tool that helps generate YARA rules from a malware sample by identifying unique strings and entropy sections.\nSetup:\npip install -r requirements.txt python yarGen.py --update üîó yarGen\nGenerate Rules:\npython3 yarGen.py -m /temp/file_name -o sample.yar Test Rules:\nyara sample.yar /home/Samples/fles-to-detect-rules-on/ yarGen is useful when you\u0026rsquo;re dealing with large volumes of unknown malware and want quick initial detection logic.\nSome advanced Rules from Real Malware APT17 ‚Äì ZoxPNG RAT\nrule APT17_Malware_Oct17_Gen { meta: description = \u0026#34;Detects APT17 malware\u0026#34; author = \u0026#34;Florian Roth\u0026#34; strings: $s1 = \u0026#34;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64...)\u0026#34; fullword ascii $s2 = \u0026#34;hWritePipe2 Error:%d\u0026#34; fullword ascii ... condition: uint16(0) == 0x5a4d and filesize \u0026lt; 200KB and ( pe.imphash() == \u0026#34;414bbd566b700ea021cfae3ad8f4d9b9\u0026#34; or 1 of ($s*) or 6 of them ) } This rule uses both string-based matching and imphash verification to detect APT17 implants based on HTTP headers and command-and-control strings.\nTurla ‚Äì Neuron Backdoor (Written in .NET)\nrule neuron_functions_classes_and_vars { strings: $class1 = \u0026#34;StorageUtils\u0026#34; $func1 = \u0026#34;AddConfigAsString\u0026#34; ... condition: uint16(0) == 0x5A4D and $dotnetMagic and 6 of them } The rule targets .NET class/function names unique to Turla‚Äôs Neuron malware and uses the BSJB magic header to identify .NET binaries.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rHunting Evil in the Windows Scanning Suspicious Executables with YARA By opening suspicious .exe files in a hex editor like HxD, we can find hardcoded artifacts left by threat actors - like .pdb paths or unique string patterns.\nYou can identify these strings by running:\nhexdump dharma_sample.exe -C | grep crysis -n3 Example of Detecting above (Dharma) Ransomware\nrule ransomware_dharma { meta: author = \u0026#34;Madhukar Raina\u0026#34; version = \u0026#34;1.0\u0026#34; description = \u0026#34;Simple rule to detect strings from Dharma ransomware\u0026#34; strings: $string_pdb = { 433A5C6372797369735C52656C656173655C5044425C7061796C6F61642E706462 } $string_ssss = { 73 73 73 73 73 62 73 73 73 } condition: all of them } Then scan the sample:\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r Scanning Running Processes (Detecting Meterpreter) To detect in-memory payloads like Metasploit‚Äôs Meterpreter, we can scan active processes using YARA rules that look for shellcode byte sequences, kernel32 API references, and known checksum values.\nrule meterpreter_reverse_tcp_shellcode { meta: author = \u0026#34;FDD @ Cuckoo sandbox\u0026#34; description = \u0026#34;Metasploit reverse_tcp shellcode\u0026#34; strings: $s1 = { fce8 8?00 0000 60 } $s2 = { 648b ??30 } $s3 = { 4c77 2607 } $s4 = \u0026#34;ws2_\u0026#34; $s5 = { 2980 6b00 } $s6 = { ea0f dfe0 } $s7 = { 99a5 7461 } condition: 5 of them } Now run the scanner for each process:\nGet-Process | ForEach-Object { \u0026#34;Scanning with Yara for meterpreter shellcode on PID\u0026#34; +$_.id; \u0026amp; \u0026#34;yara64.exe\u0026#34; \u0026#34;C:\\Rules\\yara\\meterpreter_shellcode.yar\u0026#34; $_.id } From the results, the meterpreter shellcode seems to have infiltrated a process with PID 9084. We can also guide the YARA scanner with a specific PID as follows.\nNow run rule over it:\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings Hunting with ETW Logs using SilkETW SilkETW is an open-source tool to work with Event Tracing for Windows (ETW) data. SilkETW provides enhanced visibility and analysis of Windows events for security monitoring, threat hunting, and incident response purposes. The best part of SilkETW is that it also has an option to integrate YARA rules. It includes YARA functionality to filter or tag event data.\nExample of PowerShell Command Detection\nrule powershell_hello_world_yara { strings: $s0 = \u0026#34;Write-Host\u0026#34; ascii wide nocase $s1 = \u0026#34;Hello\u0026#34; ascii wide nocase $s2 = \u0026#34;from\u0026#34; ascii wide nocase $s3 = \u0026#34;PowerShell\u0026#34; ascii wide nocase condition: 3 of ($s*) } Start ETW logging:\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara -yo Matches now in the new session apply following command\nInvoke-Command -ScriptBlock {Write-Host \u0026#34;Hello from PowerShell\u0026#34;} \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rYARA is not fun as it seems after some hit ad try but defenitely it\u0026rsquo;s good one to begin your SOC analyst fundamental.\nNext time, I‚Äôll be diving into Sigma rules, another powerful framework that turns log data into actionable detections. Stay tuned, and feel free to reach out if you\u0026rsquo;d like to connect or collaborate:\nüîó Contact Me\nüìÖ Schedule via Calendly\n","permalink":"http://localhost:1313/blog/post-1-copy/","summary":"\u003cp\u003eAs we know that YARA is one of the most powerful tools if used correctly. We can analyze disk artifacts, memory images, or even live endpoint telemetry. Also, YARA rules allow to detect known malware patterns, identify suspicious behavior.\u003c/p\u003e\n\u003cp\u003eIn this blog, we\u0026rsquo;ll walk through real-world hunting scenarios. We‚Äôll build and test rules against malware samples like WannaCry, Dharma, APT17, and Turla. We‚Äôll also explore how YARA integrates with memory forensics and event telemetry (ETW) for runtime detection.\u003c/p\u003e","title":"Hunt Evil with - YARA"},{"content":"Overview This project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\n","permalink":"http://localhost:1313/projects/cloud-security-automation/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project is under development and I am researching more about how to make pipeline more secure. But you see what tools and technology I will be using for this project in below image.\u003c/p\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/projects/CICD.png#center\"/\u003e \n\u003c/figure\u003e\n\n\u003chr\u003e","title":"Secure CI/CD DevSecOps pipeline"},{"content":" ‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\nüöÄ How I decided to take this exam In the last week of March, I was exploring new things to learn and that curiosity led me to start a DevSecOps project.\nWhile diving deeper, I thought,\n‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\nSo, I looked into available AWS certifications and decided to try the AWS Solutions Architect Associate (SAA-C03).\nAnd guess what?\nAnd yes, I took the exam on April 3rd and passed in less than a week!\nüîó Verify my badge on Credly\nInitial Thoughts \u0026amp; Strategy At first, I was so overwhelmed that there are multiple things to cover but as soon as I just googled about each domains which will be coming on exam I realized that there are only limited number of services that this exam focuses on.\nThe exam is structured into 4 domains:\n1 Design Secure Architectures\n2 Design Resilient Architecture\n3 High-Performing Architecture\n4 Design Cost-Optimized Architectures\nBefore started learning about exam, I just had basic understanding of popular services like S3, EC2, VPC because I have Cloud Computing subject in my curriculum. It was totally basic so I think we can neglect that. But as these domains just covers essential part, that was enough.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rResources \u0026amp; Study Approach üìö Resources I won‚Äôt make it unnecessary long and come to the point. All I did study was from a YouTube playlist by Peace of Code. That guy covered all of the basic concepts and solved around 350 questions with explanation.\nüé• Peace of Code - AWS SAA-C03 Full Course + Questions\nüìù Study Approach I take notes majorly from his question solving parts because those tips are important like how you actually thought about question and how you can eliminate options. As you can see it‚Äôs short and concise notes, which I just referred once before starting my exam.\nAnd about my study hours, I didn‚Äôt really study much for this like roughly 3‚Äì4 hours a day and on exam day maybe I studies 6 hours as I took it in the evening. But I watch videos in 3x-4x speed that‚Äôs why I managed to complete that playlist this early.\nSomehow thinking about Cloud infrastructure came to me naturally and in fact, I had 50+ minutes left over in my exam. (total exam time is 130 minutes for 65 questions).\nTime for BONUS$ I got 50% off just by checking post of AWS Training \u0026amp; Certification LinkedIn! They usually have 50% off voucher always available or you can easily find it somewhere else. Currently they have 50% off for all Associate level exam till 21st May.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rTrust me, this exam is just test foundational knowledge of AWS cloud and you don‚Äôt need to take stress over it. Watch that playlist and you are good to go.\nThank you for reading through, I wish you good luck if you are considering taking exam with AWS soon and meet you on DevSecOps project‚Äôs blog!\n","permalink":"http://localhost:1313/blog/post-1/","summary":"\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/blog/blog-1-AWS/aws-saa-logo.png#center\"\n         alt=\"AWS SAA Badge\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e‚ÄúSometimes starting something new opens the door to accomplishments you never expected.‚Äù\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-how-i-decided-to-take-this-exam\"\u003eüöÄ How I decided to take this exam\u003c/h2\u003e\n\u003cp\u003eIn the \u003cstrong\u003elast week of March\u003c/strong\u003e, I was exploring new things to learn and that curiosity led me to start a \u003cstrong\u003eDevSecOps project\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhile diving deeper, I thought,\u003cbr\u003e\n\u003cem\u003e‚ÄúWhy not understand AWS deeply and get certified along the way?‚Äù\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo, I looked into available AWS certifications and decided to try the \u003cstrong\u003eAWS Solutions Architect Associate (SAA-C03)\u003c/strong\u003e.\u003c/p\u003e","title":"How I passed AWS Solution Architect Associate - SAA in 5 days!"},{"content":"Eye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\nAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\nIt\u0026rsquo;s a cloud-hosted, GUI-based OSINT tool developed using Python, Flask, and React.js, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its modular design: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\nüîç What Can Eye-Sint Do? üåê Web Scraping: Collects website headers, extracts emails, performs domain lookups, and even brute-forces directories. üß† Human Footprinting: Gathers information about individuals, performs username lookups, phone number-based geolocation, and extracts PDF metadata. üîê Port Scanning: Detects open network ports to help with vulnerability assessments. üìÅ PDF Metadata Extraction: Analyze files for hidden author details, creation dates, and more. üåé Domain Search: Perform whois lookups and SSL info extraction with just a few clicks. And the best part? It‚Äôs open source, easily extendable, and built to be used by both beginners and pros in the cybersecurity field. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüß™ Built With: üêç Python (Backend Logic) ‚öõÔ∏è React.js (Frontend UI) üî• Flask (Web Server \u0026amp; Routing) ‚òÅÔ∏è Cloud-hosted on Render for public access \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìù Research Publication I‚Äôm super proud to say that our project also resulted in a research paper, titled:\n‚ÄúEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool‚Äù\nüìÑ Published in the Indian Journal of Natural Sciences (Vol.14 / Issue 82 / Feb 2024)\nThis paper explores the technical architecture, methodologies, and comparative evaluation of Eye-Sint against tools like Shodan and Maltego. We also emphasized ethical OSINT, ensuring Eye-Sint encourages responsible data usage, consent practices, and privacy considerations.\nüîó Read the publication here (PDF)\nüí° Let me know if you\u0026rsquo;d like access to the source code!\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüöÄ Why I Built This While my other projects (like One Shop Stop) focused more on web development, Eye-Sint was where I truly started diving deep into cybersecurity. It helped me explore OSINT frameworks, automate repetitive tasks, and apply research knowledge into practice.\nI also learned a lot about secure data handling, modular architecture, and open-source collaboration, and I can confidently say this project boosted my technical and professional growth.\n‚ÄúEye-Sint is more than a project‚Äîit\u0026rsquo;s a personal milestone that blends my passion for security, research, and open-source contribution.‚Äù\nüíª Tech Demo üåê Try it here: https://tool-frontend.onrender.com\nüìù Paper: Research Article (PDF)\nüß† What‚Äôs Next? I\u0026rsquo;m actively working on:\nAdding AI-assisted OSINT automation Integrating Maltego-like graphs Expanding modules with more social recon features Feel free to connect if you\u0026rsquo;re interested in collaborating, contributing, or testing it out!\n","permalink":"http://localhost:1313/projects/eye-sint/","summary":"\u003cp\u003eEye-Sint was made during my undergrad as a final-year college project, and it became one of the most rewarding technical journeys I‚Äôve had. I always wanted to build something useful in the OSINT and cybersecurity space and Eye-Sint brought both of those passions together.\u003c/p\u003e\n\u003cp\u003eAnd in fact, it was awarded Best Project of the 2024 Batch! üèÜ\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a \u003cstrong\u003ecloud-hosted, GUI-based OSINT tool\u003c/strong\u003e developed using \u003cstrong\u003ePython\u003c/strong\u003e, \u003cstrong\u003eFlask\u003c/strong\u003e, and \u003cstrong\u003eReact.js\u003c/strong\u003e, capable of performing reconnaissance across the internet. What makes Eye-Sint special is its \u003cstrong\u003emodular design\u003c/strong\u003e: it brings together multiple OSINT functionalities that are usually scattered across several tools‚Äîall in one place.\u003c/p\u003e","title":"Eye-Sint ‚Äì A Multi-Module Open-Source Intelligence Tool"},{"content":"It was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\nAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\nit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\nüîó Backend\nüîó Frontend\nüõçÔ∏è One Shop Stop ‚Äì Secure MERN Stack E-commerce Platform One Shop Stop is a full-featured, responsive e-commerce platform built using the MERN stack (MongoDB, Express, React, Node.js). It integrates Razorpay for secure payment processing and prioritizes both functionality and security to provide a seamless user experience for customers and sellers.\nüåê Key Features üîé Product Search \u0026amp; Filtering: Easily browse, search, and filter products by categories or keywords. üõí Shopping Cart: Add multiple items, review your selections, and securely check out. üó£Ô∏è User Reviews \u0026amp; Feedback: Customers can leave ratings and reviews to help others make informed decisions. üí¨ Delivery Instructions: Personalized delivery options included at checkout. üîê Secure Registration \u0026amp; Login: Role-based access and protected authentication flow for users and admins. üí≥ Razorpay Integration: Safe and smooth transactions through Razorpay‚Äôs payment gateway. \u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüîê Security Enhancements Security was a top priority in the development process. The platform is protected against multiple OWASP Top 10 vulnerabilities:\n‚úÖ XSS (Cross-Site Scripting): DOMPurify and input sanitization are used across all user inputs to prevent malicious script injection. ‚úÖ CSRF (Cross-Site Request Forgery): Routes are CSRF-protected with token validation in sensitive operations. ‚úÖ Path Traversal \u0026amp; Local File Inclusion (LFI): All routes are controlled via React Router, and uploads are validated to reject any file types like .php, .phtml, etc. ‚úÖ Broken Authentication: Proper session and token management ensures secure user identity. ‚úÖ Secure Upload Handling: Files are validated and sanitized before being stored, preventing injection and traversal attacks. ‚ÄúIf a user tries to upload a file with unsafe extensions, the system immediately blocks it and notifies them with a warning.‚Äù\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüìà Admin \u0026amp; Seller Tools Sellers and admins can:\nView analytics and graphs for customer behavior Manage product inventory and orders efficiently Identify popular products by category or demographic Maintain a database of recurring customers and preferences üì¶ Scalable \u0026amp; Future-Proof Designed with scalability in mind, One Shop Stop can easily expand to support a growing catalog and user base. The modular architecture allows integration of additional services, such as AI-based recommendations or multi-language support.\n\u0026middot; \u0026nbsp; \u0026middot; \u0026nbsp; \u0026middot;\rüéØ Conclusion \u0026ldquo;One Shop Stop aims to become a globally accessible and secure e-commerce platform, balancing intuitive design with enterprise-grade protection.\u0026rdquo;\nThis project reflects real-world e-commerce challenges and solutions with a focus on modern security practices, cloud integration, and data-driven decision-making.\n","permalink":"http://localhost:1313/projects/one-stop-shop/","summary":"\u003cp\u003eIt was basically my undergrade College Project and Built a responsive e-commerce platform using MERN stack with Razorpay integration for payments. Implemented features like product filtering, user reviews, delivery instructions, and secure data stored in MongoDB.\u003c/p\u003e\n\u003cp\u003eAdded protections against attacks such as XSS, CSRF, Broken Auth., Path traversal, local file inclusion and more OWASP attacks\u003c/p\u003e\n\u003cp\u003eit was mainly web development project but I started learning about Cybersecurity at the same time so did some secure coding practice and tested for every OWASP Top 10 and my project successfully passed every check at that time. You can check my repo for project and leave below thing as it\u0026rsquo;s just pure GPT.\u003c/p\u003e","title":"ONE STOP SHOP"},{"content":"\u003c!DOCTYPE html\u003e Get In Touch Get In Touch Got a question about cybersecurity? Or just want to geek out over tech? I‚Äôm always happy to connect, help where I can, and learn something new along the way :) Email bavarvasneh@gmail.com Location ///blend.monks.fumes\nConnect With Me Name * Email * Subject * New Connection! :) ‚Üê Click to auto-fill Message * Send Message ","permalink":"http://localhost:1313/contact/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n    \u003cstyle\u003e\n      .contact-container {\n        display: grid;\n        grid-template-columns: 1fr 1.5fr;\n        gap: 2rem;\n        margin-top: 2rem;\n      }\n\n      .contact-form input,\n      .contact-form textarea {\n        width: 100%;\n        padding: 0.75rem;\n        border: 1px solid #333;\n        border-radius: 6px;\n        background-color: #121212;\n        color: white;\n        font-size: 1rem;\n      }\n\n      .contact-form label {\n        font-weight: 600;\n        margin-bottom: 0.25rem;\n        display: block;\n      }\n\n      .submit-button {\n        background-color: #3b82f6;\n        color: white;\n        border: none;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        width: 100%;\n        margin-top: 1rem;\n      }\n\n      .submit-button:hover {\n        background-color: #2563eb;\n      }\n\n      .click-to-fill {\n        font-size: 0.875rem;\n        color: #3b82f6;\n        margin-top: 0.25rem;\n        cursor: pointer;\n      }\n\n      .contact-container {\n          display: grid;\n          grid-template-columns: 1fr 1.5fr;\n          gap: 3rem;\n          margin-bottom: 4rem;\n        }\n\n        .contact-info {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n\n        .info-card {\n          display: flex;\n          gap: 1rem;\n          padding: 1.25rem;\n          background-color: var(--card-bg);\n          border-radius: 8px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        }\n\n        .info-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          /* background-color: var(--primary-color-light); */\n          border-radius: 50%;\n          /* color: var(--primary-color); */\n          flex-shrink: 0;\n        }\n\n        .info-content {\n          flex: 1;\n        }\n\n        .info-content h3 {\n          margin: 0 0 0.5rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .info-content p {\n          margin: 0;\n          color: var(--text-color-light);\n        }\n\n        .info-content a {\n          color: var(--text-color);\n          text-decoration: none;\n          transition: color 0.2s ease;\n        }\n\n        .info-content a:hover {\n          color: var(--primary-color);\n          text-decoration: underline;\n        }\n\n        .social-links {\n          margin-top: 1rem;\n        }\n\n        .social-links h3 {\n          margin-bottom: 1rem;\n          /* font-size: 1.1rem; */\n        }\n\n        .social-icons {\n          display: flex;\n          gap: 3rem;\n        }\n\n        .social-icons a {\n          display: flex;\n          /* align-items: center; */\n          /* justify-content: center; */\n          width: 40px;\n          height: 40px;\n          /* background-color: var(--card-bg); */\n          border-radius: 50%;\n          color: var(--text-color);\n          transition: all 0.2s ease;\n        }\n\n        .social-icons a:hover {\n          /* background-color: var(--primary-color); */\n          color: white;\n          transform: translateY(-2px);\n        }\n        @media (max-width: 900px) {\n          .contact-container {\n            grid-template-columns: 1fr;\n          }\n\n          .faq-items {\n            grid-template-columns: 1fr;\n          }\n        }\n\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003csection\u003e\n      \u003ch1\u003eGet In Touch\u003c/h1\u003e\n\n      \u003cp class=\"intro-text\"\u003e\n        Got a question about cybersecurity? Or just want to geek out over tech?\n        I‚Äôm always happy to connect, help where I can, and learn something new\n        along the way :)\n      \u003c/p\u003e","title":""},{"content":"\u003c!DOCTYPE html\u003e Get In Touch whoami I'm an international graduate student at the University of Maryland, College Park, currently pursuing my Master‚Äôs in Cybersecurity along with a Graduate Certificate in Cloud Engineering. I'm actively seeking a cybersecurity internship or co-op opportunity for Summer or Fall 2025 in the DMV area - where I can contribute, learn, and grow in real-world security environments. You'll find me writing technical blogs, building and contributing to open-source security tools, and regularly participating in CTFs to sharpen my skills. View Projects ‚Üí Get in Touch ‚Üí Featured Projects Automated DevSecOps pipeline: Secure CI/CD Deployment An automated vulnerability scanning pipeline which involves Cloud, AI and Security Integration. Jenkins Docker OWASP Learn More Eye-Sint Tool It's a GUI-based unique OSINT tool hosted on Cloud which can do web enum and human footprinting. Python React Flask Learn More View All Projects ‚Üí üìú Certifications AWS Solution Architect Associate | (SAA) - April 2025 HTB Certified Defensive Security Analyst | (CDSA) - March 2025 Offensive Security Certified Professional | (OSCP) - July 2024 Google Cybersecurity Professional Certificate - September 2023 INE eLearnSecurity Junior Penetration Tester | (eJPTv2) - May 2023 Certified Ethical Hacker | (CEH - Practical) - February 2023 üìö Publications Original Research\nEnhancing OSINT Practices with Eye-Sint: A Multi-Module Intelligence Tool - October 2023 SQLI Attack: An Approach using ML and Hybrid Techniques - September 2023 {{ partial \"medium-feed.html\" . }} ","permalink":"http://localhost:1313/mainpage/","summary":"\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003clink\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\"\n    /\u003e\n\n    \u003ctitle\u003eGet In Touch\u003c/title\u003e\n\u003cstyle\u003e\n  .highlight {\n    background-color: rgba(50, 115, 220, 0.1);\n    color: #3273dc;\n    padding: 0 0.2rem;\n    border-radius: 3px;\n  }\n  .featured-links {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n\n  .featured-link {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    background-color: #3273dc;\n    color: white;\n    border-radius: 5px;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-align: center;\n  }\n\n  .featured-link:hover {\n    background-color: #2366c9;\n    text-decoration: none;\n  }\n\n  .featured-link.outline {\n    background-color: transparent;\n    color: #3273dc;\n    border: 1px solid #3273dc;\n  }\n\n  .featured-link.outline:hover {\n    background-color: #3273dc;\n    color: white;\n  }\n  .project-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n    margin: 1.5rem 0;\n  }\n\n  .project-card {\n    background-color: #1e1e1e;\n    padding: 1.5rem;\n    border-radius: 10px;\n    border: 1px solid #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .project-card h3 {\n    margin-top: 0;\n    color: #fff;\n  }\n\n  .project-card p {\n    color: #ccc;\n  }\n\n  .tags {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .tag {\n    background-color: #2d2d2d;\n    color: #60a5fa;\n    padding: 0.3rem 0.75rem;\n    border-radius: 999px;\n    font-size: 0.875rem;\n    font-weight: 500;\n  }\n\n  .project-links {\n    margin-top: 1rem;\n  }\n\n  .project-links a {\n    color: #60a5fa;\n    text-decoration: none;\n    font-weight: 500;\n  }\n\n  .project-links a:hover {\n    text-decoration: underline;\n  }\n\n  .view-all {\n    margin-top: 1rem;\n    text-align: right;\n  }\n\n  .view-all a {\n    color: #60a5fa;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  .view-all a:hover {\n    text-decoration: underline;\n  }\n\u003c/style\u003e\n\u003cbody\u003e\n\u003cmain class=\"main\"\u003e\n  \u003csection class=\"intro py-12\"\u003e\n    \u003cdiv class=\"typing-container mb-6\"\u003e\n      \u003ch2 class=\"text-2xl font-bold\"\u003e\n        \u003cspan class=\"highlight text-blue-400\"\u003ewhoami\u003c/span\u003e\n      \u003c/h2\u003e\n    \u003c/div\u003e\n\n    \u003cp class=\"mb-4 text-zinc-300\"\u003e\n      I'm an international graduate student at the\n      \u003cstrong\u003e University of Maryland, College Park\u003c/strong\u003e, currently pursuing\n      my\n      \u003cspan class=\"highlight text-blue-400\"\u003e Master‚Äôs in Cybersecurity\u003c/span\u003e\n      along with a \u003cstrong\u003eGraduate Certificate in Cloud Engineering\u003c/strong\u003e.\n    \u003c/p\u003e","title":""},{"content":"I\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\nCurrently, I\u0026rsquo;m diving deep into Cloud, AI, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on threat modeling and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\nAlso recently, I\u0026rsquo;ve developed an interest in defensive side of the security like securing infrastructure and detecting anomalies. One of my goals this year is to build an AI-powered tool/pipeline to automate SOC workflows and detect unusual patterns in logs and infrastructure.\nAnd yeah of course, I enjoy offensive security as well and I can say I have strong fundamental holding there. I love solving CTF challenges and hacking machines on platforms like Hack The Box (HTB) and TryHackMe (THM). I really like API testing, exploring OWASP Top 10 vulnerabilities, and digging into business logic flaws during web app pentests. Burp-~- I am coming for you next\u0026hellip;.\nüéì Education Master of Engineering in Cybersecurity\rGraduate Certificate in Cloud Engineering\nUniversity of Maryland - College Park\rCoursework: Binary Exploitation | Security Tools | Information Assurance | Cloud Security | Cloud Computing\r2024 - 2026\rBachelor of Technology in Information Technology\rBirla Vishvakarma Mahavidyalaya\r2020 - 2024\rCoursework: Cybersecurity | Computer Networks | Operating System | Machine Learning\rüíº Work Experience\rJunior Penetration Tester\rEVE Healthcare Centers\r2022 - 2023\rInformation Security Administrator\rVirtual Testing Foundation\r2022\rüõ†Ô∏è Technical Skills Category\rSkills \u0026 Tools\rLanguages\rPython, x86/x64 Assembly, Bash, PowerShell, Shell Scripting, JavaScript,\rSQL, C/C++\rDomain\rAD Management, Incident Response, Threat Modelling, System Design,\rOWASP, Reverse Engineering, Cryptography, Risk Management\rSecurity Practices \u0026 Methodologies\rSCA, SAST, DAST, TCP/IP, EDR, Network Security\rOperating Systems\rWindows, Linux, MacOS, mint Linux (best)\rCloud \u0026 DevSecOps\rAWS, Azure, GCP, Docker, Jenkins, Git, Microservices, Terraform,\rKubernetes, argoCD\rPenetration Testing\rVAPT\rVulnerability Assessment\rNetwork Scanning\rWeb Application Security\rLLM Security\rTools\rBurp Suite, Ghidra, Autopsy, Frida, Cobalt Strike, mimikatz, MobSF,\rOWASP ZAP, x64Dbg, IDS/IPS, Nessus, Nmap, Wireshark, Snort, Splunk,\rElastic, Microsoft Sentinel, Zeek (Bro)\r","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m passionate about cybersecurity and always eager to explore different areas within the field. Funny enough, my journey began when my own LinkedIn account got hacked - lol, that\u0026rsquo;s a story for another time!\u003c/p\u003e\n\u003cp\u003eCurrently, I\u0026rsquo;m diving deep into \u003cstrong\u003eCloud\u003c/strong\u003e, \u003cstrong\u003eAI\u003c/strong\u003e, and their integration with security to build a secure CI/CD pipeline. I\u0026rsquo;m focused on \u003cstrong\u003ethreat modeling\u003c/strong\u003e and automating that process by integrating LLM models in the workflow. This project will take a while but it\u0026rsquo;s my goal for the year.\u003c/p\u003e","title":"üëã About Me"},{"content":"This page is currently in the drafts, soon you will find things here\u0026hellip;.\n~Capablaca\n","permalink":"http://localhost:1313/ctf/","summary":"\u003cp\u003eThis page is currently in the drafts, soon you will find things here\u0026hellip;.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e~Capablaca\u003c/em\u003e\u003c/p\u003e\n\u003chr style=\"border: none; border-top: 2px solid #444; margin: 2rem 0\" /\u003e","title":"CTF - Capture-the-flag"}]